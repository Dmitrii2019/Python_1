# Задача-1:
# Дан список фруктов.
# Напишите программу, выводящую фрукты в виде нумерованного списка,
# выровненного по правой стороне.

# Пример:
# Дано: ["яблоко", "банан", "киви", "арбуз"]
# Вывод:
# 1. яблоко
# 2.  банан
# 3.   киви
# 4.  арбуз

# Подсказка: воспользоваться методом .format()
#решение №1
fruit = ["яблоко", "банан", "киви", "арбуз"]
i = 1
for i in range(len(fruit)):
    print(i + 1, fruit[i])
#решение №2
fruit = ["яблоко", "банан", "киви", "арбуз"]
last_fruit = len(fruit)
for i in range(last_fruit):
    print(str(i + 1) + '.' + '{}'.format(fruit[i]))

# Задача-2:
# Даны два произвольные списка.
# Удалите из первого списка элементы, присутствующие во втором списке.
a = ['a', 'b', 'c', 'b', 'c', 'e', 'g']
b = ['a', 'b', 'c', 'e']
a = set(a)
b = set(b)
c = (a - b)
print(list(c))

# Задача-3:
# Дан произвольный список из целых чисел.
# Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на два.

old_list = [2, 7, 8, 6, 9, 17, 20]
new_list = []
len_list = len(old_list)
for i in range(len_list):
    if old_list[i] % 2 == 0:
        new_list.append(old_list[i] / 4)
    else:
        new_list.append(old_list[i] * 2)

print(new_list)

# ответ [0.5, 14, 2.0, 1.5, 18, 34, 5.0]

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]


# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)
days = {'01': 'первое', '02': 'второе', '03': 'третье', '04': 'четвёртое', '05': 'пятое', '06': 'шестое', '07': 'седьмое', '08': 'восьмое', '09': 'девятое', '10': 'десятое', '11': 'одиннадцатое', '12': 'двенадцатое', '13': 'тринадцатое', '14': 'четырнадцатое', '15': 'пятнадцатое', '16': 'шестнадцатое', '17': 'семнадцатое', '18': 'восемнадцатое', '19': 'девятнадцатое', '20': 'двадцатое', '21': 'двадцать первое', '22': 'двадцать второе', '23': 'двадцать третье', '24': 'двадцать четвёртое', '25': 'двадцать пятое', '26': 'двадцать шестое', '27': 'двадцать седьмое', '28': 'двадцать восьмое', '29': 'двадцать девятое', '30': 'тридцатое', '31': 'тридцать первое'}
months = {'01': 'января', '02': 'февраля', '03': 'марта', '04': 'апреля', '05': 'мая', '06': 'июня', '07': 'июля', '08': 'августа', '09': 'сентября', '10': 'октября', '11': 'ноября', '12': 'декабря'}
data = input('видите дату в формате 01.01.2000: ').split('.')
print(days[data[0]], months[data[1]], data[2], 'года')

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random


# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]
#a)
lst = [1, 2, 4, 5, 6, 2, 5, 2]
lst_l = set(lst)
print(list(lst_l))
#b)
lst1 = [1, 2, 4, 5, 6, 2, 5, 2]
lst2 = []
for i in lst1:
    a = lst1.count(i)
    if a == 1:
        lst2.append(i)
print(lst2)


